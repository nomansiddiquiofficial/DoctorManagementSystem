@using DocManagementSystem.Common.Helpers
@using DoctorManagementSystem.Common.Entities.Models.Entities
@using Model = DoctorManagementSystem.Common.Entities.Models.Entities
@model DocManagementSystem.Common.Models.Api.Response.SearchListing<Model.DepartmentVM>

@{
    ViewData["Title"] = "Department Management";
}

@using (new FunctionTracer())
{
    if (Model != null)
    {
        <section id="departments" class="content-section">
            <h2>Department Management</h2>

            <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addDepartmentModal">
                Add Department
            </button>

            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Department</th>
                            <th>Head</th>
                            <th>Staff Count</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="departmentsTable">
                        @if (Model?.TotalResults > 0)
                        {
                            foreach (DepartmentVM dept in Model.Results)
                            {
                                <tr data-id="@dept.Id">
                                    <td>@dept.DepartmentName</td>
                                    <td>@dept.HeadDoctorName</td>
                                    <td>@dept.StaffCount</td>
                                    <td>
                                        <button class="btn btn-sm btn-primary" onclick="editDepartment(@dept.Id)">Edit</button>
                                        <button class="btn btn-sm btn-danger" onclick="deleteDepartment(@dept.Id)">Delete</button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4" class="text-center text-muted">No departments found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </section>

        <!-- ✅ Your Modal (Add Department) -->
        <div class="modal fade" id="addDepartmentModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add Department</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="departmentForm">
                            @Html.AntiForgeryToken()
                            <div class="mb-3">
                                <label class="form-label">Department</label>
                                <input type="text" class="form-control" required name="department">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Head</label>
                                <select class="form-select" required name="head">
                                    @{
                                        var doctors = ViewBag.Doctors as List<DoctorVM>;
                                        if (doctors != null && doctors.Any())
                                        {
                                            <option value="">-- Select Head Doctor --</option>
                                            @foreach (var doc in doctors)
                                            {
                                                <option value="@doc.Id">@doc.FullName</option>
                                            }
                                        }
                                        else
                                        {
                                            <option disabled>No doctors available</option>
                                        }
                                    }
                                </select>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" onclick="saveDepartment()">Save Department</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- ✅ Edit Department Modal -->
        <div class="modal fade" id="editDepartmentModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit Department</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editDepartmentForm">
                            @Html.AntiForgeryToken()
                            <input type="hidden" id="editDepartmentId" />
                            <div class="mb-3">
                                <label class="form-label">Department</label>
                                <input type="text" class="form-control" id="editDepartmentName" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Head</label>
                                <select class="form-select" id="editDepartmentHead" required>
                                    @{
                                        var doctors = ViewBag.Doctors as List<DoctorVM>;
                                    @if (doctors != null && doctors.Any())
                                    {
                                        <option value="">-- Select Head Doctor --</option>
                                        @foreach (var doc in doctors)
                                        {
                                            <option value="@doc.Id">@doc.FullName</option>
                                        }
                                    }
                                    }
                                </select>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" onclick="updateDepartment()">Update</button>
                    </div>
                </div>
            </div>
        </div>

        <script>
            function saveDepartment() {
                const departmentName = $('input[name="department"]').val().trim();
                const headId = $('select[name="head"]').val();

                if (!departmentName || !headId) {
                    alert('Please fill all required fields.');
                    return;
                }

                const data = {
                    DepartmentName: departmentName,
                    HeadDoctorId: parseInt(headId)
                };

                const token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: '@Url.Action("AddDepartment", "Department")',
                    type: 'POST',
                    headers: { 'RequestVerificationToken': token },
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function () {
                        $('#addDepartmentModal').modal('hide');
                        $('#departmentForm')[0].reset();
                        location.reload();
                    },
                    error: function () {
                        alert('Failed to save department.');
                    }
                });
            }

            function editDepartment(id) {
                $.get(`/Department/GetDepartment/${id}`, function (data) {
                    if (data) {
                        $('#editDepartmentId').val(data.Id);
                        $('#editDepartmentName').val(data.DepartmentName);
                        $('#editDepartmentHead').val(data.HeadDoctorId);
                        $('#editDepartmentModal').modal('show');
                    }
                });
            }

            function updateDepartment() {
                const id = $('#editDepartmentId').val();
                const name = $('#editDepartmentName').val().trim();
                const headId = $('#editDepartmentHead').val();

                if (!id || !name || !headId) {
                    alert('Please fill all required fields.');
                    return;
                }

                const data = {
                    DepartmentName: name,
                    HeadDoctorId: parseInt(headId)
                };

                const token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: `/Department/EditDepartment/${id}`,
                    type: 'PATCH',
                    headers: { 'RequestVerificationToken': token },
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function () {
                        $('#editDepartmentModal').modal('hide');
                        location.reload();
                    },
                    error: function () {
                        alert('Failed to update department.');
                    }
                });
            }

            function deleteDepartment(id) {
                if (confirm('Are you sure you want to delete this department?')) {
                    const token = $('input[name="__RequestVerificationToken"]').val();

                    $.ajax({
                        url: `/Department/DeleteDepartment/${id}`,
                        type: 'DELETE',
                        headers: { 'RequestVerificationToken': token },
                        success: function () {
                            alert('Department deleted successfully.');
                            location.reload();
                        },
                        error: function () {
                            alert('Failed to delete department.');
                        }
                    });
                }
            }
        </script>
    }
}
