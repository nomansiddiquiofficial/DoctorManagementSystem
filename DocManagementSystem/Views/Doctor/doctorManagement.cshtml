@using DocManagementSystem.Common.Helpers
@using DoctorManagementSystem.Common.Entities.Models.Entities
@using Model = DoctorManagementSystem.Common.Entities.Models.Entities
@using static DoctorManagementSystem.Common.Entities.Models.Entities.DoctorVM
@model DocManagementSystem.Common.Models.Api.Response.SearchListing<Model.DoctorVM>
@{
    ViewData["Title"] = "All Doctors";
}

@using (new FunctionTracer())
{
    if (Model != null)
    {
        <section id="doctors" class="content-section">
            <h2>Doctors Management</h2>
            <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addDoctorModal">Add Doctor</button>
            <div class="row mb-3">
                <div class="col">
                    <input type="text" class="form-control" id="doctorSearch" placeholder="Search Doctors...">
                </div>
                <div class="col-auto">
                    <select id="doctorStatus" class="form-select">
                        <option>All</option>
                        <option>Active</option>
                        <option>Inactive</option>
                    </select>
                </div>
                <div class="col-auto">
                    <button class="btn btn-secondary" onclick="filterDoctors()">Apply Filters</button>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Full Name</th>
                            <th>Gender</th>
                            <th>Specialty</th>
                            <th>Department</th>
                            <th>Phone Number</th>
                            <th>Patients</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="doctorsTable">
                        @{
                            foreach (DoctorVM item in Model.Results)
                            {
                                <tr>
                                    <td>@item.FullName</td>
                                    <td>@item.Gender</td>
                                    <td>@item.Specialty</td>
                                    <td>@item.Department</td>
                                    <td>@item.PhoneNumber</td>
                                    <td>@item.Patients.Count</td>
                                    <td><span class="badge bg-black" style=" background-color: black; color: white;">@(item.DocStatus == Status.Active ? "Active" : "Not Active")</span></td>
                                    <td>
                                        <button class="btn btn-sm btn-primary" id="editButton"    data-id="@item.Id" data-bs-target="#editDoctorModal"   data-bs-toggle="modal" asp-controller="Doctor" asp-action="EditDoctor">Edit</button>
                                        <button class="btn btn-sm btn-danger" id="deleteButton" data-id="@item.Id" data-bs-target="#delectDoctorModal" data-bs-toggle="modal" asp-controller="Doctor" asp-action="DeleteDoctor">Delete</button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </section>

        <div class="modal fade" id="addDoctorModal">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <form id="addDoctorForm">
                        @Html.AntiForgeryToken()
                        <div class="modal-header">
                            <h5 class="modal-title">Add New Doctor</h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">

                            <!-- Step 1: Personal Information -->
                            <div class="step-content active">
                                <div class="mb-3">
                                    <label class="form-label">Full Name</label>
                                    <input type="text" class="form-control" required name="fullName">
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Gender</label>
                                    <select class="form-select" required name="gender">
                                        <option>Male</option>
                                        <option>Female</option>
                                        <option>Other</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Phone Number</label>
                                    <input type="text" class="form-control" required name="phoneNumber">
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Specialty</label>
                                    <input type="text" class="form-control" required name="specialty">
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Department</label>
                                    <input type="text" class="form-control" required name="department">
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary" id="submit">Add</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="modal fade" id="editDoctorModal">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <form id="editDoctorForm">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" id="editDoctorId" />

                        <div class="modal-header">
                            <h5 class="modal-title">Edit Doctor</h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                        </div>

                        <div class="modal-body">
                            <!-- Step 1: Personal Information -->
                            <div class="step-content active">
                                <div class="mb-3">
                                    <label class="form-label">Full Name</label>
                                    <input type="text" class="form-control"  name="fullName" id="editFullName">
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Gender</label>
                                    <select class="form-select"  name="gender" id="editGender">
                                        <option value="">Select</option>
                                        <option value="Male">Male</option>
                                        <option value="Female">Female</option>
                                        <option value="Other">Other</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Phone Number</label>
                                    <input type="text" class="form-control"  name="phoneNumber" id="editPhoneNumber">
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Specialty</label>
                                    <input type="text" class="form-control"  name="specialty" id="editSpecialty">
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Department</label>
                                    <input type="text" class="form-control"  name="department" id="editDepartment">
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Status</label>
                                    <select class="form-select" name="status" id="editStatus">
                                        <option value="Active">Active</option>
                                        <option value="InActive">Inactive</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary" id="updateDoctorBtn">Update</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <script type="text/javascript">
            $(document).ready(function () {

                $(document).on('click', '#editButton', function () {
                    const doctorId = $(this).data('id');
                    if (!doctorId) {
                        alert('Doctor ID not found!');
                        return;
                    }

                    // Set the hidden input with the doctor ID
                    $('#editDoctorId').val(doctorId);

                });

                // Submit Add Doctor form
                $('#addDoctorForm').on('submit', function (e) {
                    e.preventDefault();
                    const fullName = $('input[name="fullName"]').val().trim();
                    const gender = $('select[name="gender"]').val();
                    const phoneNumber = $('input[name="phoneNumber"]').val().trim();
                    const specialty = $('input[name="specialty"]').val().trim();
                    const department = $('input[name="department"]').val().trim();

                    if (!fullName || !gender || !phoneNumber || !specialty || !department) {
                        alert('Please fill all required fields.');
                        return;
                    }

                    const doctorData = {
                        FullName: fullName,
                        Gender: gender,
                        PhoneNumber: phoneNumber,
                        Specialty: specialty,
                        Department: department
                    };

                    const token = $('input[name="__RequestVerificationToken"]').val();

                    $.ajax({
                        url: '@Url.Action("AddDoctor", "Doctor")',
                        type: 'POST',
                        headers: {
                            'RequestVerificationToken': token
                        },
                        contentType: 'application/json',
                        data: JSON.stringify(doctorData),
                        success: function (response) {
                            $('#addDoctorModal').modal('hide');
                            $('#addDoctorForm')[0].reset();
                            location.reload(); // Optional: reload to see new doctor
                        },
                        error: function (xhr, status, error) {
                            alert('Failed to add doctor. Please try again.');
                            console.error(error);
                        }
                    });
                });

                // Submit Edit Doctor form
                $('#editDoctorForm').on('submit', function (e) {
                    e.preventDefault();

                    const id = $('#editDoctorId').val(); // Get doctor ID from hidden input
                    if (!id) {
                        alert('Doctor ID is missing.');
                        return;
                    }

                    const fullName = $('#editFullName').val().trim();
                    const gender = $('#editGender').val();
                    const phoneNumber = $('#editPhoneNumber').val().trim();
                    const specialty = $('#editSpecialty').val().trim();
                    const department = $('#editDepartment').val().trim();
                    const status = $('#editStatus').val();

                    const doctorData = {
                        FullName: fullName,
                        Gender: gender,
                        PhoneNumber: phoneNumber,
                        Specialty: specialty,
                        Department: department,
                        DocStatus: status
                    };

                    const token = $('input[name="__RequestVerificationToken"]').val();

                    $.ajax({
                        url: `/Doctor/EditDoctor/${id}`,
                        type: 'PATCH',
                        headers: {
                            'RequestVerificationToken': token
                        },
                        contentType: 'application/json',
                        data: JSON.stringify(doctorData),
                        success: function (response) {
                            $('#editDoctorModal').modal('hide');
                            $('#editDoctorForm')[0].reset();
                            location.reload(); // Reload to reflect changes
                        },
                        error: function (xhr, status, error) {
                            alert('Failed to update doctor. Please try again.');
                            console.error(error);
                        }
                    });
                });

                // Deactivate (Delete) doctor button click handler
                $(document).on('click', '#deleteButton', function () {
                    const doctorId = $(this).data('id');
                    if (!doctorId) {
                        alert('Doctor ID is missing.');
                        return;
                    }

                    if (confirm('Are you sure you want to deactivate this doctor?')) {
                        const token = $('input[name="__RequestVerificationToken"]').val();

                        $.ajax({
                            url: `/Doctor/DeleteDoctor/${doctorId}`,
                            type: 'DELETE',
                            headers: {
                                'RequestVerificationToken': token
                            },
                            success: function (response) {
                                alert('Doctor deactivated successfully.');
                                location.reload(); // Reload to update status
                            },
                            error: function () {
                                alert('Failed to deactivate doctor. Please try again.');
                            }
                        });
                    }
                });

            });
        </script>



    }
}